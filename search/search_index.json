{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SLE is defined as the application of systematic, disciplined, and measurable approaches to the development, deployment, use, and maintenance of software languages \u2014 SLEBoK (Software Language Engineering Body of Knowledge) This is a collection of software language engineering (SLE) tools, frameworks and books. Pull requests are very welcome! Table of content Language Workbench Metalanguages General purpose Visual syntax Grammar Code Generation Syntax Semantics Books Blogs License Language Workbench A language workbench is a software development tool designed to define, reuse and compose domain-specific languages together with their integrated development environment. Language workbenches support language-oriented programming. Language workbenches were introduced and popularized by Martin Fowler in 2005. - Wikipedia The GEMOC Studio: http://gemoc.org/studio.html Monticore: http://www.monticore.de/ MPS: https://www.jetbrains.com/mps/ Neverlang: http://neverlang.di.unimi.it/ Rascal: http://www.rascal-mpl.org/ Spoofax: www.metaborg.org/ Xtext: https://www.eclipse.org/Xtext/ Metalanguages Broadly, any metalanguage is language or symbols used when language itself is being discussed or examined. In logic and linguistics, a metalanguage is a language used to make statements about statements in another language (the object language). Expressions in a metalanguage are often distinguished from those in an object language by the use of italics, quotation marks, or writing on a separate line. The structure of sentences and phrases in a metalanguage can be described by a metasyntax. - Wikipedia General purpose Xtend: https://www.eclipse.org/xtend/ Visual syntax Sirius: https://www.eclipse.org/sirius/ Grammar Code Generation Javapoet: https://github.com/square/javapoet Syntax Eclipse Modeling Framework (EMF): https://www.eclipse.org/modeling/emf/ Semantics ALE: http://gemoc.org/ale-lang/ Kermeta 3: http://diverse-project.github.io/k3/ Books The Software Languages Book - Syntax, semantics, and metaprogramming : http://www.softlang.org/book Engineering Modeling Languages - Turning Domain Knowledge Into Tools : http://mdebook.irisa.fr/ DSL Engineering: http://dslbook.org/ Blogs https://languageengineering.io/ License To the extent possible under law, Manuel Leduc has waived all copyright and related or neighboring rights to this work. Title image Designed by Freepik .","title":"Home"},{"location":"#language-workbench","text":"A language workbench is a software development tool designed to define, reuse and compose domain-specific languages together with their integrated development environment. Language workbenches support language-oriented programming. Language workbenches were introduced and popularized by Martin Fowler in 2005. - Wikipedia The GEMOC Studio: http://gemoc.org/studio.html Monticore: http://www.monticore.de/ MPS: https://www.jetbrains.com/mps/ Neverlang: http://neverlang.di.unimi.it/ Rascal: http://www.rascal-mpl.org/ Spoofax: www.metaborg.org/ Xtext: https://www.eclipse.org/Xtext/","title":"Language Workbench"},{"location":"#metalanguages","text":"Broadly, any metalanguage is language or symbols used when language itself is being discussed or examined. In logic and linguistics, a metalanguage is a language used to make statements about statements in another language (the object language). Expressions in a metalanguage are often distinguished from those in an object language by the use of italics, quotation marks, or writing on a separate line. The structure of sentences and phrases in a metalanguage can be described by a metasyntax. - Wikipedia","title":"Metalanguages"},{"location":"#general-purpose","text":"Xtend: https://www.eclipse.org/xtend/","title":"General purpose"},{"location":"#visual-syntax","text":"Sirius: https://www.eclipse.org/sirius/","title":"Visual syntax"},{"location":"#grammar","text":"","title":"Grammar"},{"location":"#code-generation","text":"Javapoet: https://github.com/square/javapoet","title":"Code Generation"},{"location":"#syntax","text":"Eclipse Modeling Framework (EMF): https://www.eclipse.org/modeling/emf/","title":"Syntax"},{"location":"#semantics","text":"ALE: http://gemoc.org/ale-lang/ Kermeta 3: http://diverse-project.github.io/k3/","title":"Semantics"},{"location":"#books","text":"The Software Languages Book - Syntax, semantics, and metaprogramming : http://www.softlang.org/book Engineering Modeling Languages - Turning Domain Knowledge Into Tools : http://mdebook.irisa.fr/ DSL Engineering: http://dslbook.org/","title":"Books"},{"location":"#blogs","text":"https://languageengineering.io/","title":"Blogs"},{"location":"#license","text":"To the extent possible under law, Manuel Leduc has waived all copyright and related or neighboring rights to this work. Title image Designed by Freepik .","title":"License"}]}