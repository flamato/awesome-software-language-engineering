{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SLE is defined as the application of systematic, disciplined, and measurable approaches to the development, deployment, use, and maintenance of software languages \u2014 SLEBoK (Software Language Engineering Body of Knowledge) This is a collection of software language engineering (SLE) tools, frameworks and books. With a focus on maintained and open-source projects. Pull requests are very welcome! Table of content Language Workbench Attribute grammar Metalanguages General purpose Visual syntax Grammar Code Generation Syntax Semantics Static semantics Model transformation Type system Books Blogs To be classified Language Workbench A language workbench is a software development tool designed to define, reuse and compose domain-specific languages together with their integrated development environment. Language workbenches support language-oriented programming. Language workbenches were introduced and popularized by Martin Fowler in 2005. - Wikipedia The GEMOC Studio: http://gemoc.org/studio.html Monticore: http://www.monticore.de/ MPS: https://www.jetbrains.com/mps/ Neverlang: http://neverlang.di.unimi.it/ Rascal: http://www.rascal-mpl.org/ Spoofax: www.metaborg.org/ Xtext: https://www.eclipse.org/Xtext/ Racket: https://racket-lang.org/ Attribute grammar An attribute grammar is a formal way to define attributes for the productions of a formal grammar, associating these attributes with values. The evaluation occurs in the nodes of the abstract syntax tree, when the language is processed by some parser or compiler. - Wikipedia Silver: http://melt.cs.umn.edu/silver/ JastAdd: http://jastadd.org/web/ Metalanguages Broadly, any metalanguage is language or symbols used when language itself is being discussed or examined. In logic and linguistics, a metalanguage is a language used to make statements about statements in another language (the object language). Expressions in a metalanguage are often distinguished from those in an object language by the use of italics, quotation marks, or writing on a separate line. The structure of sentences and phrases in a metalanguage can be described by a metasyntax. - Wikipedia General purpose Xtend: https://www.eclipse.org/xtend/ Visual syntax Sirius: https://www.eclipse.org/sirius/ Grammar Copper: http://melt.cs.umn.edu/copper/ Code Generation Javapoet: https://github.com/square/javapoet Epsilon EGL: https://www.eclipse.org/epsilon/doc/egl/ Acceleo: https://www.eclipse.org/acceleo/ Syntax Eclipse Modeling Framework (EMF): https://www.eclipse.org/modeling/emf/ Spoofax SDF3: http://www.metaborg.org/en/latest/source/langdev/meta/lang/sdf3/ . Semantics ALE: http://gemoc.org/ale-lang/ Kermeta 3: http://diverse-project.github.io/k3/ Spoofax DynSem: http://www.metaborg.org/en/latest/source/langdev/meta/lang/dynsem/index.html Static semantics Epsilon EVL: https://www.eclipse.org/epsilon/doc/evl/ Model transformation ETL: https://www.eclipse.org/epsilon/doc/etl/ Type system Xsemantics: http://xsemantics.sourceforge.net/ Books The Software Languages Book - Syntax, semantics, and metaprogramming : http://www.softlang.org/book Engineering Modeling Languages - Turning Domain Knowledge Into Tools : http://mdebook.irisa.fr/ DSL Engineering: http://dslbook.org/ Blogs https://languageengineering.io/ To be classified Kiama: https://wiki.mq.edu.au/display/plrg/Kiama License To the extent possible under law, Manuel Leduc has waived all copyright and related or neighboring rights to this work. Title image Designed by Freepik .","title":"Home"},{"location":"#language-workbench","text":"A language workbench is a software development tool designed to define, reuse and compose domain-specific languages together with their integrated development environment. Language workbenches support language-oriented programming. Language workbenches were introduced and popularized by Martin Fowler in 2005. - Wikipedia The GEMOC Studio: http://gemoc.org/studio.html Monticore: http://www.monticore.de/ MPS: https://www.jetbrains.com/mps/ Neverlang: http://neverlang.di.unimi.it/ Rascal: http://www.rascal-mpl.org/ Spoofax: www.metaborg.org/ Xtext: https://www.eclipse.org/Xtext/ Racket: https://racket-lang.org/","title":"Language Workbench"},{"location":"#attribute-grammar","text":"An attribute grammar is a formal way to define attributes for the productions of a formal grammar, associating these attributes with values. The evaluation occurs in the nodes of the abstract syntax tree, when the language is processed by some parser or compiler. - Wikipedia Silver: http://melt.cs.umn.edu/silver/ JastAdd: http://jastadd.org/web/","title":"Attribute grammar"},{"location":"#metalanguages","text":"Broadly, any metalanguage is language or symbols used when language itself is being discussed or examined. In logic and linguistics, a metalanguage is a language used to make statements about statements in another language (the object language). Expressions in a metalanguage are often distinguished from those in an object language by the use of italics, quotation marks, or writing on a separate line. The structure of sentences and phrases in a metalanguage can be described by a metasyntax. - Wikipedia","title":"Metalanguages"},{"location":"#general-purpose","text":"Xtend: https://www.eclipse.org/xtend/","title":"General purpose"},{"location":"#visual-syntax","text":"Sirius: https://www.eclipse.org/sirius/","title":"Visual syntax"},{"location":"#grammar","text":"Copper: http://melt.cs.umn.edu/copper/","title":"Grammar"},{"location":"#code-generation","text":"Javapoet: https://github.com/square/javapoet Epsilon EGL: https://www.eclipse.org/epsilon/doc/egl/ Acceleo: https://www.eclipse.org/acceleo/","title":"Code Generation"},{"location":"#syntax","text":"Eclipse Modeling Framework (EMF): https://www.eclipse.org/modeling/emf/ Spoofax SDF3: http://www.metaborg.org/en/latest/source/langdev/meta/lang/sdf3/ .","title":"Syntax"},{"location":"#semantics","text":"ALE: http://gemoc.org/ale-lang/ Kermeta 3: http://diverse-project.github.io/k3/ Spoofax DynSem: http://www.metaborg.org/en/latest/source/langdev/meta/lang/dynsem/index.html","title":"Semantics"},{"location":"#static-semantics","text":"Epsilon EVL: https://www.eclipse.org/epsilon/doc/evl/","title":"Static semantics"},{"location":"#model-transformation","text":"ETL: https://www.eclipse.org/epsilon/doc/etl/","title":"Model transformation"},{"location":"#type-system","text":"Xsemantics: http://xsemantics.sourceforge.net/","title":"Type system"},{"location":"#books","text":"The Software Languages Book - Syntax, semantics, and metaprogramming : http://www.softlang.org/book Engineering Modeling Languages - Turning Domain Knowledge Into Tools : http://mdebook.irisa.fr/ DSL Engineering: http://dslbook.org/","title":"Books"},{"location":"#blogs","text":"https://languageengineering.io/","title":"Blogs"},{"location":"#to-be-classified","text":"Kiama: https://wiki.mq.edu.au/display/plrg/Kiama License To the extent possible under law, Manuel Leduc has waived all copyright and related or neighboring rights to this work. Title image Designed by Freepik .","title":"To be classified"}]}